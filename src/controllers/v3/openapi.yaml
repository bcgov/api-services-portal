components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        DatasetContact:
            properties:
                name:
                    type: string
                email:
                    type: string
                role:
                    type: string
                    enum:
                        - pointOfContact
                    nullable: false
            type: object
            additionalProperties: false
        DatasetResource:
            properties:
                id:
                    type: string
                name:
                    type: string
                format:
                    type: string
                    enum:
                        - openapi-json
                        - json
                url:
                    type: string
            type: object
            additionalProperties: false
        OrganizationRefID:
            type: string
        OrganizationUnitRefID:
            type: string
        Dataset:
            properties:
                extForeignKey:
                    type: string
                name:
                    type: string
                license_title:
                    type: string
                security_class:
                    type: string
                view_audience:
                    type: string
                download_audience:
                    type: string
                record_publish_date:
                    type: string
                notes:
                    type: string
                title:
                    type: string
                isInCatalog:
                    type: string
                isDraft:
                    type: string
                contacts:
                    items:
                        $ref: '#/components/schemas/DatasetContact'
                    type: array
                resources:
                    items:
                        $ref: '#/components/schemas/DatasetResource'
                    type: array
                extSource:
                    type: string
                extRecordHash:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                organization:
                    $ref: '#/components/schemas/OrganizationRefID'
                organizationUnit:
                    $ref: '#/components/schemas/OrganizationUnitRefID'
            type: object
            additionalProperties: false
        BatchResult:
            properties:
                status:
                    type: number
                    format: double
                result:
                    type: string
                reason:
                    type: string
                id:
                    type: string
                ownedBy:
                    type: string
                childResults:
                    items:
                        $ref: '#/components/schemas/BatchResult'
                    type: array
            required:
                - status
                - result
            type: object
            additionalProperties: false
        DraftDataset:
            properties:
                name:
                    type: string
                license_title:
                    type: string
                security_class:
                    type: string
                    enum:
                        - HIGH-CABINET
                        - HIGH-CONFIDENTIAL
                        - HIGH-SENSITIVITY
                        - MEDIUM-SENSITIVITY
                        - MEDIUM-PERSONAL
                        - LOW-SENSITIVITY
                        - LOW-PUBLIC
                        - PUBLIC
                        - 'PROTECTED A'
                        - 'PROTECTED B'
                        - 'PROTECTED C'
                view_audience:
                    type: string
                    enum:
                        - Public
                        - Government
                        - 'Named users'
                        - 'Government and Business BCeID'
                download_audience:
                    type: string
                    enum:
                        - Public
                        - Government
                        - 'Named users'
                        - 'Government and Business BCeID'
                record_publish_date:
                    type: string
                notes:
                    type: string
                title:
                    type: string
                isInCatalog:
                    type: boolean
                isDraft:
                    type: boolean
                contacts:
                    items:
                        $ref: '#/components/schemas/DatasetContact'
                    type: array
                resources:
                    items:
                        $ref: '#/components/schemas/DatasetResource'
                    type: array
                tags:
                    items:
                        type: string
                    type: array
                organization:
                    $ref: '#/components/schemas/OrganizationRefID'
                organizationUnit:
                    $ref: '#/components/schemas/OrganizationUnitRefID'
            type: object
            additionalProperties: false
            example:
                name: my_sample_dataset
                license_title: 'Open Government Licence - British Columbia'
                security_class: PUBLIC
                view_audience: Public
                download_audience: Public
                record_publish_date: '2017-09-05'
                notes: 'Some notes'
                title: 'A title about my dataset'
                tags:
                    - tag1
                    - tag2
                organization: ministry-of-citizens-services
                organizationUnit: databc
        Gateway:
            properties:
                gatewayId:
                    type: string
                displayName:
                    type: string
            type: object
            additionalProperties: false
        ActivityDetail:
            properties:
                id:
                    type: string
                message:
                    type: string
                params:
                    properties: {}
                    additionalProperties:
                        type: string
                    type: object
                activityAt: {}
                blob: {}
            required:
                - message
                - params
                - activityAt
            type: object
            additionalProperties: false
        PublishResult:
            properties:
                message:
                    type: string
                results:
                    type: string
                error:
                    type: string
            type: object
            additionalProperties: false
        GatewayServiceRefID:
            type: string
        GatewayRouteRefID:
            type: string
        GatewayPlugin:
            properties:
                extForeignKey:
                    type: string
                name:
                    type: string
                extSource:
                    type: string
                extRecordHash:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                config: {}
                service:
                    $ref: '#/components/schemas/GatewayServiceRefID'
                route:
                    $ref: '#/components/schemas/GatewayRouteRefID'
            type: object
            additionalProperties: false
        GatewayRoute:
            properties:
                extForeignKey:
                    type: string
                name:
                    type: string
                gatewayId:
                    type: string
                extSource:
                    type: string
                extRecordHash:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                methods:
                    items:
                        type: string
                    type: array
                paths:
                    items:
                        type: string
                    type: array
                hosts:
                    items:
                        type: string
                    type: array
                service:
                    $ref: '#/components/schemas/GatewayServiceRefID'
                plugins:
                    items:
                        $ref: '#/components/schemas/GatewayPlugin'
                    type: array
            type: object
            additionalProperties: false
        IssuerEnvironmentConfig:
            properties:
                environment:
                    type: string
                exists:
                    type: boolean
                issuerUrl:
                    type: string
                clientRegistration:
                    type: string
                    enum:
                        - anonymous
                        - managed
                        - iat
                clientId:
                    type: string
                clientSecret:
                    type: string
                initialAccessToken:
                    type: string
            type: object
            additionalProperties: false
            example:
                environment: dev
                issuerUrl: 'https://idp.site/auth/realms/my-realm'
                clientRegistration: managed
                clientId: a-client-id
                clientSecret: a-client-secret
        undefinedRefID:
            type: string
        CredentialIssuer:
            properties:
                name:
                    type: string
                gatewayId:
                    type: string
                description:
                    type: string
                flow:
                    type: string
                    enum:
                        - client-credentials
                    nullable: false
                mode:
                    type: string
                    enum:
                        - auto
                    nullable: false
                authPlugin:
                    type: string
                clientAuthenticator:
                    type: string
                    enum:
                        - client-secret
                        - client-jwt
                        - client-jwt-jwks-url
                instruction:
                    type: string
                environmentDetails:
                    items:
                        $ref: '#/components/schemas/IssuerEnvironmentConfig'
                    type: array
                resourceType:
                    type: string
                resourceAccessScope:
                    type: string
                isShared:
                    type: boolean
                apiKeyName:
                    type: string
                availableScopes:
                    items:
                        type: string
                    type: array
                resourceScopes:
                    items:
                        type: string
                    type: array
                clientRoles:
                    items:
                        type: string
                    type: array
                clientMappers:
                    items:
                        type: string
                    type: array
                inheritFrom:
                    $ref: '#/components/schemas/undefinedRefID'
                owner:
                    $ref: '#/components/schemas/undefinedRefID'
            type: object
            additionalProperties: false
            example:
                name: my-auth-profile
                description: 'Auth connection to my IdP'
                flow: client-credentials
                clientAuthenticator: client-secret
                mode: auto
                environmentDetails: []
                owner: janis@gov.bc.ca
        OrganizationUnit:
            properties:
                extForeignKey:
                    type: string
                name:
                    type: string
                sector:
                    type: string
                title:
                    type: string
                description:
                    type: string
                extSource:
                    type: string
                extRecordHash:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
            type: object
            additionalProperties: false
        Organization:
            properties:
                extForeignKey:
                    type: string
                name:
                    type: string
                sector:
                    type: string
                title:
                    type: string
                description:
                    type: string
                extSource:
                    type: string
                extRecordHash:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                orgUnits:
                    items:
                        $ref: '#/components/schemas/OrganizationUnit'
                    type: array
            type: object
            additionalProperties: false
        GroupPermission:
            properties:
                resource:
                    type: string
                scopes:
                    items:
                        type: string
                    type: array
            required:
                - scopes
            type: object
            additionalProperties: false
        GroupRole:
            properties:
                name:
                    type: string
                permissions:
                    items:
                        $ref: '#/components/schemas/GroupPermission'
                    type: array
            required:
                - name
                - permissions
            type: object
            additionalProperties: false
        GroupAccess:
            properties:
                name:
                    type: string
                parent:
                    type: string
                roles:
                    items:
                        $ref: '#/components/schemas/GroupRole'
                    type: array
            required:
                - roles
            type: object
            additionalProperties: false
        UserReference:
            properties:
                id:
                    type: string
                email:
                    type: string
            type: object
            additionalProperties: false
        GroupMember:
            properties:
                member:
                    $ref: '#/components/schemas/UserReference'
                roles:
                    items:
                        type: string
                    type: array
            required:
                - member
                - roles
            type: object
            additionalProperties: false
        GroupMembership:
            properties:
                name:
                    type: string
                parent:
                    type: string
                members:
                    items:
                        $ref: '#/components/schemas/GroupMember'
                    type: array
            type: object
            additionalProperties: false
        OrgNamespace:
            properties:
                name:
                    type: string
                orgUnit:
                    type: string
                enabled:
                    type: boolean
                updatedAt:
                    type: number
                    format: double
            required:
                - name
                - orgUnit
                - enabled
                - updatedAt
            type: object
            additionalProperties: false
        DraftDatasetRefID:
            type: string
        LegalRefID:
            type: string
        CredentialIssuerRefID:
            type: string
        Environment:
            properties:
                appId:
                    type: string
                name:
                    type: string
                    enum:
                        - dev
                        - test
                        - prod
                        - sandbox
                        - other
                active:
                    type: boolean
                approval:
                    type: boolean
                flow:
                    type: string
                    enum:
                        - public
                        - protected-externally
                        - authorization-code
                        - client-credentials
                        - kong-acl-only
                        - kong-api-key-only
                        - kong-api-key-acl
                additionalDetailsToRequest:
                    type: string
                services:
                    items:
                        $ref: '#/components/schemas/GatewayServiceRefID'
                    type: array
                legal:
                    $ref: '#/components/schemas/LegalRefID'
                credentialIssuer:
                    $ref: '#/components/schemas/CredentialIssuerRefID'
            type: object
            additionalProperties: false
            example:
                name: dev
                active: false
                approval: false
                flow: public
                appId: '00000000'
        Product:
            properties:
                appId:
                    type: string
                name:
                    type: string
                description:
                    type: string
                gatewayId:
                    type: string
                dataset:
                    $ref: '#/components/schemas/DraftDatasetRefID'
                environments:
                    items:
                        $ref: '#/components/schemas/Environment'
                    type: array
            type: object
            additionalProperties: false
            example:
                name: my-new-product
                appId: '000000000000'
                environments:
                    -
                        name: dev
                        active: false
                        approval: false
                        flow: public
                        appId: '00000000'
    securitySchemes:
        jwt:
            type: oauth2
            description: 'Authz Client Credential'
            flows:
                clientCredentials:
                    tokenUrl: 'https://token_endpoint'
                    scopes: {}
        portal:
            type: http
            description: 'Authz Portal Login'
            scheme: bearer
            bearerFormat: JWT
        openid:
            type: openIdConnect
            description: 'OIDC Login'
            openIdConnectUrl: 'https://well_known_endpoint'
info:
    title: 'APS Directory API'
    version: 3.0.0
    description: 'API Services Portal by BC Gov API Programme Services'
    license:
        name: MIT
    contact:
        name: 'BC Gov APS'
openapi: 3.0.0
paths:
    '/organizations/{org}/datasets':
        get:
            operationId: organization-datasets
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Dataset'
                                type: array
            description: "Get metadata about Datasets that are available by API for this organization\n> `Required Scope:` Dataset.Manage"
            summary: 'Get Organization Datasets'
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Dataset.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
        put:
            operationId: put-organization-dataset
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Manage metadata about Datasets that are available by API for this organization\n> `Required Scope:` Dataset.Manage"
            summary: 'Manage Organization Datasets'
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Dataset.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DraftDataset'
    '/organizations/{org}/datasets/{name}':
        delete:
            operationId: delete-dataset
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Delete a Dataset\n> `Required Scope:` Dataset.Manage"
            summary: 'Delete a dataset'
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Dataset.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: name
                    required: true
                    schema:
                        type: string
        get:
            operationId: get-organization-dataset
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Dataset'
            description: "Get metadata about a Dataset that are available by API for this organization\n> `Required Scope:` Dataset.Manage"
            summary: 'Get Organization Dataset'
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Dataset.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: name
                    required: true
                    schema:
                        type: string
    /directory:
        get:
            operationId: directory-list
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            tags:
                - 'API Directory'
            security: []
            parameters: []
    '/directory/{id}':
        get:
            operationId: directory-item
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            tags:
                - 'API Directory'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        type: string
    '/gateways/{gatewayId}/datasets':
        put:
            operationId: put-dataset
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Update metadata about a Dataset\n> `Required Scope:` Namespace.Manage"
            summary: 'Update Dataset'
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DraftDataset'
    '/gateways/{gatewayId}/datasets/{name}':
        get:
            operationId: get-dataset
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Dataset'
            description: "Get metadata about a Dataset\n> `Required Scope:` Namespace.Manage"
            summary: 'Get Dataset'
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: name
                    required: true
                    schema:
                        type: string
    /routes/availability:
        get:
            operationId: check-availability
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            tags:
                - 'Service Routes'
            security: []
            parameters:
                -
                    in: query
                    name: serviceName
                    required: true
                    schema:
                        type: string
                -
                    in: query
                    name: gatewayId
                    required: true
                    schema:
                        type: string
    /gateways/report:
        get:
            operationId: report
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            tags:
                - Gateways
            security:
                -
                    jwt: []
            parameters:
                -
                    in: query
                    name: ids
                    required: false
                    schema:
                        default: '[]'
                        type: string
    /gateways:
        get:
            operationId: gateway-list
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Gateway'
                                type: array
            summary: 'List of Gateways available to the user'
            tags:
                - Gateways
            security:
                -
                    jwt: []
            parameters: []
        post:
            operationId: create-gateway
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Gateway'
            description: 'Create a gateway'
            summary: 'Create Gateway'
            tags:
                - Gateways
            security:
                -
                    jwt: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Gateway'
    '/gateways/{gatewayId}':
        get:
            operationId: gateway-profile
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Gateway'
            description: "Get details about the gateway, such as permissions for what the gateway is setup with.\n> `Required Scope:` Namespace.Manage"
            summary: 'Gateway Summary'
            tags:
                - Gateways
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
        delete:
            operationId: delete-namespace
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Gateway'
            description: "Delete the gateway\n> `Required Scope:` Namespace.Manage"
            summary: 'Delete Gateway'
            tags:
                - Gateways
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: query
                    name: force
                    required: false
                    schema:
                        default: false
                        type: boolean
    '/gateways/{gatewayId}/activity':
        get:
            operationId: gateway-admin-activity
            responses:
                '200':
                    description: 'Activity[]'
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ActivityDetail'
                                type: array
            description: '> `Required Scope:` Namespace.View'
            summary: 'Get administration activity for this gateway'
            tags:
                - Gateways
            security:
                -
                    jwt:
                        - Namespace.View
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: query
                    name: first
                    required: false
                    schema:
                        default: 20
                        format: double
                        type: number
                -
                    in: query
                    name: skip
                    required: false
                    schema:
                        default: 0
                        format: double
                        type: number
    '/gateways/{gatewayId}/links':
        get:
            operationId: get-gateway-links
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    properties: {host: {type: string}}
                                    required: [host]
                                    type: object
                                type: array
            description: "Get a summary of your endpoints\n> `Required Scope:` Namespace.Manage"
            summary: 'Get endpoints'
            tags:
                - Gateways
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
    '/gateways/{gatewayId}/directory/{id}':
        get:
            operationId: get-ns-directory-dataset
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            description: "Used primarily for \"Preview Mode\"\nGet a particular Dataset"
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        type: string
    '/gateways/{gatewayId}/directory':
        get:
            operationId: get-ns-directory
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            description: "Used primarily for \"Preview Mode\"\nList the datasets belonging to a particular namespace"
            tags:
                - 'API Directory (Administration)'
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
    '/gateways/{gatewayId}/services':
        put:
            operationId: publish-gateway-config
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PublishResult'
            tags:
                - 'Gateway Services'
            security:
                -
                    jwt:
                        - Gateway.Config
            parameters: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                dryRun:
                                    type: string
                                configFile:
                                    type: string
                                    format: binary
                            required:
                                - dryRun
                                - configFile
        get:
            operationId: get-gateway-routes
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/GatewayRoute'
                                type: array
            description: "Get a summary of your Gateway Services\n> `Required Scope:` Namespace.Manage"
            summary: 'Get Gateway Services'
            tags:
                - 'Gateway Services'
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
    '/identifiers/{type}':
        get:
            operationId: GetNewID
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: string
            tags:
                - 'New Identifiers'
            security: []
            parameters:
                -
                    in: path
                    name: type
                    required: true
                    schema:
                        type: string
                        enum:
                            - environment
                            - product
                            - application
                            - gateway
    '/gateways/{gatewayId}/issuers':
        put:
            operationId: put-issuer
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Create or Update Authorization Profiles\n> `Required Scope:` CredentialIssuer.Admin"
            summary: 'Manage Authorization Profiles'
            tags:
                - 'Authorization Profiles'
            security:
                -
                    jwt:
                        - CredentialIssuer.Admin
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CredentialIssuer'
        get:
            operationId: get-issuers
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CredentialIssuer'
                                type: array
            description: "Get Authorization Profiles setup in this namespace\n> `Required Scope:` Namespace.Manage"
            summary: 'Get Authorization Profiles'
            tags:
                - 'Authorization Profiles'
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
    '/gateways/{gatewayId}/issuers/{name}':
        delete:
            operationId: delete-issuer
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Delete an Authorization Profile\n> `Required Scope:` CredentialIssuer.Admin"
            summary: 'Delete Profile'
            tags:
                - 'Authorization Profiles'
            security:
                -
                    jwt:
                        - CredentialIssuer.Admin
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: name
                    required: true
                    schema:
                        type: string
    /organizations:
        get:
            operationId: organization-list
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items: {}
                                type: array
            tags:
                - Organizations
            security: []
            parameters: []
    '/organizations/{org}':
        put:
            operationId: put-organization
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Create Organization\n> `Required Scope:` GroupAccess.Manage"
            summary: 'Create Organizations'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - GroupAccess.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
        get:
            operationId: organization-units
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            tags:
                - Organizations
            security: []
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
    '/organizations/{org}/roles':
        get:
            operationId: get-organization-roles
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupAccess'
            description: '> `Required Scope:` GroupAccess.Manage'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - GroupAccess.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
    '/organizations/{org}/access':
        get:
            operationId: get-organization-access
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupMembership'
            description: '> `Required Scope:` GroupAccess.Manage'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - GroupAccess.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
        put:
            operationId: put-organization-access
            responses:
                '204':
                    description: 'No content'
            description: '> `Required Scope:` GroupAccess.Manage'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - GroupAccess.Manage
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GroupMembership'
    '/organizations/{org}/gateways':
        get:
            operationId: organization-gateways
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OrgNamespace'
                                type: array
            description: '> `Required Scope:` Namespace.Assign'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - Namespace.Assign
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
    '/organizations/{org}/{orgUnit}/gateways/{gatewayId}':
        put:
            operationId: assign-namespace-to-organization
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                properties:
                                    result: {type: string}
                                required:
                                    - result
                                type: object
            description: '> `Required Scope:` Namespace.Assign'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - Namespace.Assign
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: orgUnit
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: query
                    name: enable
                    required: false
                    schema:
                        default: true
                        type: boolean
        delete:
            operationId: unassign-namespace-from-organization
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                properties:
                                    result: {type: string}
                                required:
                                    - result
                                type: object
            description: '> `Required Scope:` Namespace.Assign'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - Namespace.Assign
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: orgUnit
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
    '/organizations/{org}/activity':
        get:
            operationId: org-namespace-activity
            responses:
                '200':
                    description: 'Activity[]'
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ActivityDetail'
                                type: array
            description: '> `Required Scope:` Namespace.Assign'
            summary: 'Get administration activity for gateways associated with this Organization'
            tags:
                - Organizations
            security:
                -
                    jwt:
                        - Namespace.Assign
            parameters:
                -
                    in: path
                    name: org
                    required: true
                    schema:
                        type: string
                -
                    in: query
                    name: first
                    required: false
                    schema:
                        default: 20
                        format: double
                        type: number
                -
                    in: query
                    name: skip
                    required: false
                    schema:
                        default: 0
                        format: double
                        type: number
    /roles:
        get:
            operationId: GetRoles
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema: {}
            tags:
                - Organizations
            security: []
            parameters: []
    '/gateways/{gatewayId}/products':
        put:
            operationId: put-product
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Manage Products for APIs that will appear on the API Directory\n> `Required Scope:` Namespace.Manage"
            summary: 'Manage Products'
            tags:
                - Products
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
        get:
            operationId: get-products
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Product'
                                type: array
            description: "Get Products describing APIs that will appear on the API Directory\n> `Required Scope:` Namespace.Manage"
            summary: 'Get Products'
            tags:
                - Products
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters: []
    '/gateways/{gatewayId}/products/{appId}':
        delete:
            operationId: delete-product
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResult'
            description: "Delete a Product\n> `Required Scope:` Namespace.Manage"
            summary: 'Manage Products'
            tags:
                - Products
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: appId
                    required: true
                    schema:
                        type: string
    '/gateways/{gatewayId}/environments/{appId}':
        delete:
            operationId: delete-product-environment
            responses:
                '204':
                    description: 'No content'
            description: "Delete a Product Environment\n> `Required Scope:` Namespace.Manage"
            summary: 'Delete a Product Environment'
            tags:
                - Products
            security:
                -
                    jwt:
                        - Namespace.Manage
            parameters:
                -
                    in: path
                    name: gatewayId
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: appId
                    required: true
                    schema:
                        type: string
                -
                    in: query
                    name: force
                    required: false
                    schema:
                        default: false
                        type: boolean
servers:
    -
        url: /ds/api/v3
tags:
    -
        name: 'API Directory'
        description: 'Discover all the great BC Government APIs'
    -
        name: 'API Directory (Administration)'
        description: 'Administer datasets on the API Directory'
    -
        name: Organizations
        description: 'Manage organizational access control'
    -
        name: Gateways
        description: 'Get aggregated information about gateways'
    -
        name: 'Gateway Services'
        description: 'View your Gateway Service details'
    -
        name: Products
        description: 'Manage your Products and Environments for publishing to the API Directory'
    -
        name: 'Authorization Profiles'
        description: 'Configure the integration to external Identity Providers'
